{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SwapDex \u26a0 WARNING: Work in progress content can change and it's not definitive. Disclaimer: Blockchain technologies are constantly evolving. This paper describes the best possible planned development, however due to the nature of the technology and the complexity of integrating the world of blockchain. This document may be subject to change. We try to come as close as possible to the original plan, but sometimes modifications are necessary to improve the user experience and overcome technological barriers encountered during development. References https://substrate.dev/docs/en/knowledgebase/smart-contracts/ https://substrate.dev/docs/ https://docs.galital.com/","title":"SwapDex"},{"location":"#swapdex","text":"\u26a0 WARNING: Work in progress content can change and it's not definitive.","title":"SwapDex"},{"location":"#disclaimer","text":"Blockchain technologies are constantly evolving. This paper describes the best possible planned development, however due to the nature of the technology and the complexity of integrating the world of blockchain. This document may be subject to change. We try to come as close as possible to the original plan, but sometimes modifications are necessary to improve the user experience and overcome technological barriers encountered during development.","title":"Disclaimer:"},{"location":"#references","text":"https://substrate.dev/docs/en/knowledgebase/smart-contracts/ https://substrate.dev/docs/ https://docs.galital.com/","title":"References"},{"location":"bounties/bounties/","text":"List of official bounties \u26a0 WARNING: Only the bounties listed here are official \u26a0 All $TAL earned during the bounties campaign will be vested for 6 months ( you can stake and use it for validators ) and issued at the main network launch ( date TBD ), vesting will be released at a frequence of 10% per month. 1) Gleam Contest : 10 $TAL and an exclusive NFT to win 2) Run a validator: Earn 10 $TAL by setting up a validator and keep it running for at least 2 weeks. For validators running for more than 2 weeks, there will be 1 NFT to be won. how to enter ? follow the validator setup guide submit proof in our discord channel \"validator-contest\" : screenshot of the running validator at launch validator address","title":"List of official bounties"},{"location":"bounties/bounties/#list-of-official-bounties","text":"\u26a0 WARNING: Only the bounties listed here are official \u26a0 All $TAL earned during the bounties campaign will be vested for 6 months ( you can stake and use it for validators ) and issued at the main network launch ( date TBD ), vesting will be released at a frequence of 10% per month.","title":"List of official bounties"},{"location":"bounties/bounties/#1-gleam-contest","text":"10 $TAL and an exclusive NFT to win","title":"1) Gleam Contest:"},{"location":"bounties/bounties/#2-run-a-validator","text":"Earn 10 $TAL by setting up a validator and keep it running for at least 2 weeks. For validators running for more than 2 weeks, there will be 1 NFT to be won.","title":"2) Run a validator:"},{"location":"bounties/bounties/#how-to-enter","text":"follow the validator setup guide submit proof in our discord channel \"validator-contest\" : screenshot of the running validator at launch validator address","title":"how to enter ?"},{"location":"maintain/migrate-validator/","text":"Migrate your Validator Setup: You need to set up a node as per the tutorial, launch it for few seconds so you create the initial data directory Migrate: In order to get the new node ID being the same as the old one you need to move the folders .local/share/galital/chains/galital/network/ and .local/share/galital/chains/galital/keystore/ if you stored keys inside it. To access the correct path you need to be in your user directory ( access it by typing cd ). The commands: This assumes you followed the documentation deployment and you use root user, replace it if the user is different. This will replace all the data on the new server! 1) Stop galital service on the new server after the node has completed the full synchronisation service galital stop 2) login in the server you want to migrate from ( where the old node is running ) service galital stop && cd && scp -rp .local/share/galital/chains/galital/network root@NEW_SERVER_IP:/root/.local/share/galital/chains/pirl/network && scp -rp .local/share/galital/chains/galital/keystore root@NEW_SERVER_IP:/root/.local/share/galital/chains/pirl/keystore 3) Go back into the new server Relaunch galital service service galital start Voila, you are all set, just wait for the chain to sync and catch the latest blocks.","title":"Migrate your Validator"},{"location":"maintain/migrate-validator/#migrate-your-validator","text":"","title":"Migrate your Validator"},{"location":"maintain/migrate-validator/#setup","text":"You need to set up a node as per the tutorial, launch it for few seconds so you create the initial data directory","title":"Setup:"},{"location":"maintain/migrate-validator/#migrate","text":"In order to get the new node ID being the same as the old one you need to move the folders .local/share/galital/chains/galital/network/ and .local/share/galital/chains/galital/keystore/ if you stored keys inside it. To access the correct path you need to be in your user directory ( access it by typing cd ).","title":"Migrate:"},{"location":"maintain/migrate-validator/#the-commands","text":"This assumes you followed the documentation deployment and you use root user, replace it if the user is different. This will replace all the data on the new server!","title":"The commands:"},{"location":"maintain/migrate-validator/#1-stop-galital-service-on-the-new-server-after-the-node-has-completed-the-full-synchronisation","text":"service galital stop","title":"1) Stop galital service on the new server after the node has completed the full synchronisation"},{"location":"maintain/migrate-validator/#2-login-in-the-server-you-want-to-migrate-from-where-the-old-node-is-running","text":"service galital stop && cd && scp -rp .local/share/galital/chains/galital/network root@NEW_SERVER_IP:/root/.local/share/galital/chains/pirl/network && scp -rp .local/share/galital/chains/galital/keystore root@NEW_SERVER_IP:/root/.local/share/galital/chains/pirl/keystore","title":"2) login in the server you want to migrate from ( where the old node is running )"},{"location":"maintain/migrate-validator/#3-go-back-into-the-new-server","text":"Relaunch galital service service galital start Voila, you are all set, just wait for the chain to sync and catch the latest blocks.","title":"3) Go back into the new server"},{"location":"testnet/testnet-Validator/","text":"Setup Validator Part 1 - Setup server components Requirements The most common way for a beginner to run a validator is on a cloud server running Linux. You may choose whatever VPS providers that your prefer, and whatever operating system you are comfortable with. The transactions weights in Galital Testnet were benchmarked on standard hardware. It is recommended that validators run at least the standard hardware in order to ensure they are able to process all blocks in time. The following are not minimum requirements but if you decide to run with less than this beware that you might have performance issue. Minimum Hardware : 6GB ram, 60 GB Storage, 2 CPU , stable server uplink connection with fixed IP Ideal Hardware : 60GB ram, 300 GB Storage, 6 CPU, stable server uplink connection with fixed IP Using Ubuntu 20.04 : Update your Ubuntu sudo apt-get update Validator Install & Configure Network Time Protocol (NTP) Client NTP is a networking protocol designed to synchronize the clocks of computers over a network. NTP allows you to synchronize the clocks of all the systems within the network. Currently it is required that validators' local clocks stay reasonably in sync, so you should be running NTP or a similar service. You can check whether you have the NTP client by running: If you are using Ubuntu 18.04 / 19.04 / 20.04, NTP Client should be installed by default. timedatectl If NTP is installed and running, you should see System clock synchronized: yes (or a similar message). If you do not see it, you can install it by executing: sudo apt-get install ntp ntpd will be started automatically after install. You can query ntpd for status information to verify that everything is working: sudo ntpq -p WARNING: Skipping this can result in the validator node missing block authorship opportunities. If the clock is out of sync (even by a small amount), the blocks the validator produces may not get accepted by the network. This will result in ImOnline heartbeats making it on chain, but zero allocated blocks making it on chain. Installing the Galital Testnet Binary Install and enable Chrony Chrony is time synchronization service. It will keep time on server in sync, which is crucial for validator to operate without interruption. sudo apt install chrony sudo systemctl enable chrony Firewall configuration Configure firewall ports to allow SSH and Validator service to communicate. sudo ufw allow 22 sudo ufw allow 30333 sudo ufw enable Setup fail2ban It provides basic-level protection against distributed brute-force attacks. sudo apt install -y fail2ban && sudo systemctl enable fail2ban && sudo service fail2ban start Install Galital Validator binaries wget https://github.com/starkleytech/galital/releases/download/2.0.1/galital && sudo chmod +x ./galital && sudo mv ./galital /usr/bin/galital Create user account to run Validator It is recommended to run validator as non-root user. For that create dedicated user account which will be used to run validator. sudo adduser galital when adding user you will be asked to provide password and some additional details for the account. Only password is mandatory, other parameters can be left blank. Create Galital Validator service Create service file file in /lib/systemd/system/tal.service sudo nano /lib/systemd/system/galital.service Content of galital.service file (make sure to change \"A Node Name\" and replace it with your moniker) : [Unit] Description=Galital Validator After=network-online.target [Service] ExecStart=/usr/bin/galital --port \"30333\" --name \"A Node Name\" --validator --chain galital User=galital Restart=always ExecStartPre=/bin/sleep 5 RestartSec=30s LimitNOFILE=8192 [Install] WantedBy=multi-user.target If you need to change port, you can setup with --prometheus-port --rpc-port and --ws-port then start the service sudo systemctl enable galital && sudo service galital start Check if validator is started To ensure that Galital Validator process works: ps aux | grep galital You should see similar output: galital 8108 9.9 21.0 1117976 419772 ? Ssl May17 601:17 /usr/bin/galital --port 30333 --name \"A Node Name\" --validator --chain galital Check if your node is appearing in the telemetry UI : https://telemetry.polkadot.io/#list/Galital Do not forget to change the name parameter (--name \"A Node Name\") Video demonstrating all above steps: Part 2 - Assign the node to an account You can get some RTAL (Testnet token) with the discord bot You need to create an controller account in order to do the next steps. The stash account serve as you \"cold wallet\" with all your precious coin The controller account serve as a manager to your stash account Always keep in safe place your keystore file or your 12/24 words seed To create an controller account, add account Save your mnemonic seed then name your account and add a password Then send some $RTAL (from your stash account) for covering network fees You can proceed to the next steps Create session key: Go in you terminal where the node is installed and paste the current command, you will have a session key of your node. curl -H \"Content-Type: application/json\" -d '{\"id\":1, \"jsonrpc\":\"2.0\", \"method\": \"author_rotateKeys\", \"params\":[]}' http://localhost:9933 Submitting the setKeys Transaction: Go to the testnet you can now create a validator, use the key generated above to paste in the form. Select your stash account, controller account and so one Add you keys form the past command. You should now see your validator in the waiting tab Video demonstrating all above steps: Part 3 - Set on-chain name of the validator Short video guide demonstrating how to assign name to validator. Voila, you are all set Written by Masterdubs & WeHaveCookie","title":"**Setup Validator**"},{"location":"testnet/testnet-Validator/#setup-validator","text":"","title":"Setup Validator"},{"location":"testnet/testnet-Validator/#part-1-setup-server-components","text":"","title":"Part 1 - Setup server components"},{"location":"testnet/testnet-Validator/#requirements","text":"The most common way for a beginner to run a validator is on a cloud server running Linux. You may choose whatever VPS providers that your prefer, and whatever operating system you are comfortable with. The transactions weights in Galital Testnet were benchmarked on standard hardware. It is recommended that validators run at least the standard hardware in order to ensure they are able to process all blocks in time. The following are not minimum requirements but if you decide to run with less than this beware that you might have performance issue.","title":"Requirements"},{"location":"testnet/testnet-Validator/#minimum-hardware","text":"6GB ram, 60 GB Storage, 2 CPU , stable server uplink connection with fixed IP","title":"Minimum Hardware :"},{"location":"testnet/testnet-Validator/#ideal-hardware","text":"60GB ram, 300 GB Storage, 6 CPU, stable server uplink connection with fixed IP","title":"Ideal Hardware :"},{"location":"testnet/testnet-Validator/#using-ubuntu-2004","text":"","title":"Using Ubuntu 20.04 :"},{"location":"testnet/testnet-Validator/#update-your-ubuntu","text":"sudo apt-get update","title":"Update your Ubuntu"},{"location":"testnet/testnet-Validator/#validator","text":"Install & Configure Network Time Protocol (NTP) Client NTP is a networking protocol designed to synchronize the clocks of computers over a network. NTP allows you to synchronize the clocks of all the systems within the network. Currently it is required that validators' local clocks stay reasonably in sync, so you should be running NTP or a similar service. You can check whether you have the NTP client by running: If you are using Ubuntu 18.04 / 19.04 / 20.04, NTP Client should be installed by default. timedatectl If NTP is installed and running, you should see System clock synchronized: yes (or a similar message). If you do not see it, you can install it by executing: sudo apt-get install ntp ntpd will be started automatically after install. You can query ntpd for status information to verify that everything is working: sudo ntpq -p WARNING: Skipping this can result in the validator node missing block authorship opportunities. If the clock is out of sync (even by a small amount), the blocks the validator produces may not get accepted by the network. This will result in ImOnline heartbeats making it on chain, but zero allocated blocks making it on chain.","title":"Validator"},{"location":"testnet/testnet-Validator/#installing-the-galital-testnet-binary","text":"","title":"Installing the Galital Testnet Binary"},{"location":"testnet/testnet-Validator/#install-and-enable-chrony","text":"Chrony is time synchronization service. It will keep time on server in sync, which is crucial for validator to operate without interruption. sudo apt install chrony sudo systemctl enable chrony","title":"Install and enable Chrony"},{"location":"testnet/testnet-Validator/#firewall-configuration","text":"Configure firewall ports to allow SSH and Validator service to communicate. sudo ufw allow 22 sudo ufw allow 30333 sudo ufw enable","title":"Firewall configuration"},{"location":"testnet/testnet-Validator/#setup-fail2ban","text":"It provides basic-level protection against distributed brute-force attacks. sudo apt install -y fail2ban && sudo systemctl enable fail2ban && sudo service fail2ban start","title":"Setup fail2ban"},{"location":"testnet/testnet-Validator/#install-galital-validator-binaries","text":"wget https://github.com/starkleytech/galital/releases/download/2.0.1/galital && sudo chmod +x ./galital && sudo mv ./galital /usr/bin/galital","title":"Install Galital Validator binaries"},{"location":"testnet/testnet-Validator/#create-user-account-to-run-validator","text":"It is recommended to run validator as non-root user. For that create dedicated user account which will be used to run validator. sudo adduser galital when adding user you will be asked to provide password and some additional details for the account. Only password is mandatory, other parameters can be left blank.","title":"Create user account to run Validator"},{"location":"testnet/testnet-Validator/#create-galital-validator-service","text":"Create service file file in /lib/systemd/system/tal.service sudo nano /lib/systemd/system/galital.service Content of galital.service file (make sure to change \"A Node Name\" and replace it with your moniker) : [Unit] Description=Galital Validator After=network-online.target [Service] ExecStart=/usr/bin/galital --port \"30333\" --name \"A Node Name\" --validator --chain galital User=galital Restart=always ExecStartPre=/bin/sleep 5 RestartSec=30s LimitNOFILE=8192 [Install] WantedBy=multi-user.target If you need to change port, you can setup with --prometheus-port --rpc-port and --ws-port then start the service sudo systemctl enable galital && sudo service galital start","title":"Create Galital Validator service"},{"location":"testnet/testnet-Validator/#check-if-validator-is-started","text":"To ensure that Galital Validator process works: ps aux | grep galital You should see similar output: galital 8108 9.9 21.0 1117976 419772 ? Ssl May17 601:17 /usr/bin/galital --port 30333 --name \"A Node Name\" --validator --chain galital Check if your node is appearing in the telemetry UI : https://telemetry.polkadot.io/#list/Galital Do not forget to change the name parameter (--name \"A Node Name\") Video demonstrating all above steps:","title":"Check if validator is started"},{"location":"testnet/testnet-Validator/#part-2-assign-the-node-to-an-account","text":"You can get some RTAL (Testnet token) with the discord bot You need to create an controller account in order to do the next steps. The stash account serve as you \"cold wallet\" with all your precious coin The controller account serve as a manager to your stash account Always keep in safe place your keystore file or your 12/24 words seed To create an controller account, add account Save your mnemonic seed then name your account and add a password Then send some $RTAL (from your stash account) for covering network fees You can proceed to the next steps","title":"Part 2 - Assign the node to an account"},{"location":"testnet/testnet-Validator/#create-session-key","text":"Go in you terminal where the node is installed and paste the current command, you will have a session key of your node. curl -H \"Content-Type: application/json\" -d '{\"id\":1, \"jsonrpc\":\"2.0\", \"method\": \"author_rotateKeys\", \"params\":[]}' http://localhost:9933","title":"Create session key:"},{"location":"testnet/testnet-Validator/#submitting-the-setkeys-transaction","text":"Go to the testnet you can now create a validator, use the key generated above to paste in the form. Select your stash account, controller account and so one Add you keys form the past command. You should now see your validator in the waiting tab Video demonstrating all above steps:","title":"Submitting the setKeys Transaction:"},{"location":"testnet/testnet-Validator/#part-3-set-on-chain-name-of-the-validator","text":"Short video guide demonstrating how to assign name to validator. Voila, you are all set Written by Masterdubs & WeHaveCookie","title":"Part 3 - Set on-chain name of the validator"},{"location":"testnet/wallet/","text":"Create a SwapDex Wallet","title":"Create a SwapDex Wallet"},{"location":"testnet/wallet/#create-a-swapdex-wallet","text":"","title":"Create a SwapDex Wallet"}]}